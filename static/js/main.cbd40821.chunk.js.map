{"version":3,"sources":["mock-events.js","api.js","CitySearch.js","NumberOfEvents.js","Event.js","EventList.js","App.js","serviceWorker.js","index.js"],"names":["mockEvents","created","duration","id","name","rsvp_limit","date_in_series_pattern","status","time","local_date","local_time","updated","utc_offset","waitlist_count","yes_rsvp_count","venue","repinned","country","localized_country_name","is_online_event","group","join_mode","lat","lon","urlname","who","localized_location","state","region","timezone","link","description","how_to_find_us","visibility","member_pay_fee","address_1","city","getSuggestions","query","a","window","location","href","startsWith","name_string","zip","getAccessToken","token","url","axios","get","result","data","getEvents","accessToken","localStorage","getItem","code","URLSearchParams","search","getOrRenewAccessToken","lastSavedTime","Date","now","type","key","tokenInfo","setItem","access_token","refresh_token","CitySearch","suggestions","handleInputChanged","event","value","target","setState","then","handleItemClicked","props","updateEvents","className","this","onChange","map","item","onClick","Component","NumberOfEvents","ShownEvents","label","Event","showDetails","handleShowDetails","EventList","events","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"sSAAMA,EAWI,CACN,CACEC,QAAS,aACTC,SAAU,KACVC,GAAI,YACJC,KACE,gGACFC,WAAY,IACZC,wBAAwB,EACxBC,OAAQ,WACRC,KAAM,WACNC,WAAY,aACZC,WAAY,QACZC,QAAS,aACTC,WAAY,KACZC,eAAgB,EAChBC,eAAgB,GAChBC,MAAO,CACLZ,GAAI,SACJC,KAAM,eACNY,UAAU,EACVC,QAAS,GACTC,uBAAwB,IAE1BC,iBAAiB,EACjBC,MAAO,CACLnB,QAAS,aACTG,KAAM,sBACND,GAAI,SACJkB,UAAW,OACXC,IAAK,kBACLC,IAAK,mBACLC,QAAS,wBACTC,IAAK,aACLC,mBAAoB,sBACpBC,MAAO,GACPV,QAAS,KACTW,OAAQ,QACRC,SAAU,iBAEZC,KAAM,iEACNC,YACE,4uEACFC,eAAgB,6CAChBC,WAAY,SACZC,gBAAgB,GAElB,CACEjC,QAAS,aACTC,SAAU,MACVC,GAAI,gBACJC,KAAM,6BACNE,wBAAwB,EACxBC,OAAQ,WACRC,KAAM,UACNC,WAAY,aACZC,WAAY,QACZC,QAAS,aACTC,WAAY,KACZC,eAAgB,EAChBC,eAAgB,EAChBC,MAAO,CACLZ,GAAI,SACJC,KAAM,sBACNkB,IAAK,mBACLC,IAAK,mBACLP,UAAU,EACVmB,UAAW,uBACXC,KAAM,aACNnB,QAAS,KACTC,uBAAwB,WAE1BC,iBAAiB,EACjBC,MAAO,CACLnB,QAAS,aACTG,KAAM,yBACND,GAAI,SACJkB,UAAW,OACXC,IAAK,kBACLC,IAAK,mBACLC,QAAS,WACTC,IAAK,aACLC,mBAAoB,sBACpBC,MAAO,GACPV,QAAS,KACTW,OAAQ,QACRC,SAAU,iBAEZC,KAAM,wDACNC,YACE,iWACFC,eAAgB,8BAChBC,WAAY,SACZC,gBAAgB,I,SCrGPG,E,8EAAf,WAA8BC,GAA9B,mBAAAC,EAAA,0DACMC,OAAOC,SAASC,KAAKC,WAAW,oBADtC,yCAEW,CACL,CACEP,KAAM,SACNnB,QAAS,KACTC,uBAAwB,UACxB0B,YAAa,kBACbC,IAAK,UACLvB,IAAK,MACLC,IAAK,OAEP,CACEa,KAAM,SACNnB,QAAS,KACTC,uBAAwB,MACxBS,MAAO,KACPiB,YAAa,4BACbC,IAAK,QACLvB,IAAK,MACLC,KAAM,SApBd,uBAyBsBuB,IAzBtB,YAyBQC,EAzBR,gCA4BUC,EACJ,4EACAV,EACA,iBACAS,EAhCN,SAiCyBE,IAAMC,IAAIF,GAjCnC,cAiCUG,EAjCV,yBAkCWA,EAAOC,MAlClB,iCAoCS,IApCT,6C,+BAuCeC,E,gFAAf,WAAyB/B,EAAKC,GAA9B,mBAAAgB,EAAA,0DACMC,OAAOC,SAASC,KAAKC,WAAW,oBADtC,yCAEW3C,GAFX,uBAKsB8C,IALtB,YAKQC,EALR,gCAQQC,EACF,yFAEAD,EAEEzB,GAAOC,IACTyB,GAAO,QAAU1B,EAAM,QAAUC,GAdvC,UAgByB0B,IAAMC,IAAIF,GAhBnC,eAgBUG,EAhBV,yBAiBWA,EAAOC,MAjBlB,6C,sBAqBA,SAASN,IACP,IAAMQ,EAAcC,aAAaC,QAAQ,gBAEzC,IAAKF,EAAa,CAChB,IACMG,EADe,IAAIC,gBAAgBlB,OAAOC,SAASkB,QAC/BT,IAAI,QAE9B,OAAKO,EAKEG,EAAsB,MAAOH,IAJlCjB,OAAOC,SAASC,KACd,oJACK,MAKX,IAAMmB,EAAgBN,aAAaC,QAAQ,mBAE3C,OAAIF,GAAeQ,KAAKC,MAAQF,EAAgB,KACvCP,EAKFM,EAAsB,QADRL,aAAaC,QAAQ,kB,SAI7BI,E,gFAAf,WAAqCI,EAAMC,GAA3C,iBAAA1B,EAAA,4DAEe,QAATyB,EAEFhB,EACE,2EACAiB,EACgB,UAATD,IAEThB,EACE,kFACAiB,GAXN,SAe0BhB,IAAMC,IAAIF,GAfpC,cAeQkB,EAfR,OAkBEX,aAAaY,QAAQ,eAAgBD,EAAUd,KAAKgB,cACpDb,aAAaY,QAAQ,gBAAiBD,EAAUd,KAAKiB,eACrDd,aAAaY,QAAQ,kBAAmBL,KAAKC,OApB/C,kBAuBSG,EAAUd,KAAKgB,cAvBxB,4C,0BC5CeE,E,4MAzCd3C,MAAQ,CACPW,MAAO,GACPiC,YAAa,I,EAGdC,mBAAqB,SAACC,GACrB,IAAMC,EAAQD,EAAME,OAAOD,MAC3B,EAAKE,SAAS,CAAEtC,MAAOoC,IACvBrC,EAAeqC,GAAOG,MAAK,SAACN,GAAD,OAAiB,EAAKK,SAAS,CAAEL,oB,EAG7DO,kBAAoB,SAACJ,EAAOpD,EAAKC,GAChC,EAAKqD,SAAS,CAAEtC,MAAOoC,EAAOH,YAAa,KAC3C,EAAKQ,MAAMC,aAAa1D,EAAKC,I,uDAGpB,IAAD,OACR,OACC,yBAAK0D,UAAU,cACd,2BACCjB,KAAK,OACLiB,UAAU,OACVP,MAAOQ,KAAKvD,MAAMW,MAClB6C,SAAUD,KAAKV,qBAEhB,wBAAIS,UAAU,eACZC,KAAKvD,MAAM4C,YAAYa,KAAI,SAACC,GAAD,OAC3B,wBACCpB,IAAKoB,EAAKzC,YACV0C,QAAS,kBACR,EAAKR,kBAAkBO,EAAKzC,YAAayC,EAAK/D,IAAK+D,EAAK9D,OAExD8D,EAAKzC,sB,GAjCY2C,aCwBVC,E,4MAxBb7D,MAAQ,CACN8D,YAAa,I,EAGfjB,mBAAqB,SAACC,GACpB,IAAMC,EAAQD,EAAME,OAAOD,MAC3B,EAAKE,SAAS,CAAEa,YAAaf,K,uDAI7B,OACE,yBAAKO,UAAU,kBACb,2BACEjB,KAAK,SACLiB,UAAU,SACVS,MAAM,mBACNhB,MAAOQ,KAAKvD,MAAM8D,YAClBN,SAAUD,KAAKV,0B,GAlBIe,aCyCdI,E,4MAxCdhE,MAAQ,CACP8C,MAAO,GACPmB,aAAa,G,EAGdC,kBAAoB,YACY,IAA3B,EAAKlE,MAAMiE,YACd,EAAKhB,SAAS,CAAEgB,aAAa,IAE7B,EAAKhB,SAAS,CAAEgB,aAAa,K,uDAIrB,IAAD,OACFA,EAAcV,KAAKH,MAAMa,YAE/B,OACC,6BACC,yBAAKX,UAAU,SACd,yBAAKA,UAAU,aAAaC,KAAKH,MAAMN,MAAMrE,MAC7C,yBAAK6E,UAAU,aAAaC,KAAKH,MAAMN,MAAMhE,YAC7C,4BACCwE,UAAU,gBACVK,QAAS,kBAAM,EAAKO,sBAFrB,iBAMAD,GACA,yBAAKX,UAAU,gBACd,yBAAKA,UAAU,oBACbC,KAAKH,MAAMN,MAAM1C,aAEnB,yBAAKkD,UAAU,aAAaC,KAAKH,MAAMN,MAAM3C,Y,GAjC/ByD,aCeLO,E,uKAZb,OACC,wBAAIb,UAAU,aACZC,KAAKH,MAAMgB,OAAOX,KAAI,SAACX,GAAD,OACtB,wBAAIR,IAAKQ,EAAMtE,IACd,kBAAC,EAAD,CAAOsE,MAAOA,a,GANIc,aCyBTS,G,kNAlBdrE,MAAQ,CACPoE,OAAQ,I,EAETf,aAAe,SAAC1D,EAAKC,GACpB8B,EAAU/B,EAAKC,GAAKsD,MAAK,SAACkB,GAAD,OAAY,EAAKnB,SAAS,CAAEmB,e,uDAIrD,OACC,yBAAKd,UAAU,OACd,kBAAC,EAAD,CAAYD,aAAcE,KAAKF,eAC/B,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWe,OAAQb,KAAKvD,MAAMoE,c,GAbhBR,cCGEU,QACW,cAA7BzD,OAAOC,SAASyD,UAEe,UAA7B1D,OAAOC,SAASyD,UAEhB1D,OAAOC,SAASyD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9B,MAAK,SAAA+B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cbd40821.chunk.js","sourcesContent":["const mockEvents = {\n  city: {\n    id: 1007700,\n    city: 'München',\n    lat: 48.14,\n    lon: 11.58,\n    state: '',\n    country: 'de',\n    zip: 'meetup3',\n    member_count: 1257,\n  },\n  events: [\n    {\n      created: 1594287674000,\n      duration: 5400000,\n      id: '271814289',\n      name:\n        'TW presents: Migration & Identity with Tuğba Yalçınkaya and İrem Aydın',\n      rsvp_limit: 100,\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1595953800000,\n      local_date: '2020-07-28',\n      local_time: '18:30',\n      updated: 1594287674000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 18,\n      venue: {\n        id: 26906060,\n        name: 'Online event',\n        repinned: false,\n        country: '',\n        localized_country_name: '',\n      },\n      is_online_event: true,\n      group: {\n        created: 1413448074000,\n        name: 'ThoughtWorks Munich',\n        id: 17658472,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'ThoughtWorks-Muenchen',\n        who: 'Mitglieder',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin',\n      },\n      link: 'https://www.meetup.com/ThoughtWorks-Muenchen/events/271814289/',\n      description:\n        '<p>Migration &amp; Identity - Conversations through experience<br/>with Tuğba Yalçınkaya and İrem Aydın</p> <p>ABOUT<br/>In Germany, nearly every 4th person has an immigration background. Essentially, we are already a land of immigration,” those were the words of chancellor Merkel in 2015. But still there are a lot of conversations about who is allowed to be German and who is not.</p> <p>As a company, ThoughtWorks not only bases its success on its diverse workforce, but also we are committed to becoming aware of our own privilege and striving to see the world from the perspective of the oppressed, the powerless, and the invisible.</p> <p>With this event series, we want to raise awareness, help to decrease discrimination, and to sensitize people without migration backgrounds to the challenges faced by people with migration backgrounds here in Germany. We are inviting speakers to share their voices and experiences in support of these goals. We hope to challenge our cosmopolitan (oftentimes color-blind) worldview that blocks us from gaining a real understanding of challenges experienced by the various vibrant communities inside of this country.</p> <p>THE TALK<br/>Migration from Turkey to Germany has a long history; starting with the first migration flow of the “guest workers” in the early 1960s up to the latest “New Wave” migration. These migration flows have created different diaspora communities in Germany. Within the framework of the event we will have a closer look at Turkey diaspora by focusing on questions as e.g.:<br/>How did Turkey diaspora shape itself in recent years and how do these flows differ themselves from each other and why? How does political polarization in Turkey affect diaspora in Germany and the position of Germany in between. While dealing with these issues İrem Aydın, as part of the “New Wave” migration, and Tuğba Yalçınkaya, as part of the 3rd generation of “guest workers”, will give insights into their personal perspectives on how they perceive themselves and how social encounters and confrontations shape their identities.</p> <p>The talk is a joint event of ThoughtWorks and Maviblau!<br/>Check out more info about Maviblau here:',\n      how_to_find_us: 'https://thoughtworks.zoom.us/j/97535023794',\n      visibility: 'public',\n      member_pay_fee: false,\n    },\n    {\n      created: 1580900882000,\n      duration: 10800000,\n      id: 'txxrnrybclbfb',\n      name: 'IOTA München Stammtisch',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1596474000000,\n      local_date: '2020-08-03',\n      local_time: '19:00',\n      updated: 1580900882000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 2,\n      venue: {\n        id: 26223377,\n        name: 'Gasthaus Alter Wirt',\n        lat: 48.100467681884766,\n        lon: 11.544821739196777,\n        repinned: false,\n        address_1: 'Fraunbergstraße 8',\n        city: 'München',\n        country: 'de',\n        localized_country_name: 'Germany',\n      },\n      is_online_event: false,\n      group: {\n        created: 1522790396000,\n        name: 'IOTA Meetup München',\n        id: 28040988,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'IOTA-Muc',\n        who: 'Mitglieder',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin',\n      },\n      link: 'https://www.meetup.com/IOTA-Muc/events/txxrnrybclbfb/',\n      description:\n        '<p>Der nächste offizielle IOTA München Stammtisch findet immer am 1. Montag des Monats um 19:00Uhr im Alten Wirt Thalkirchen statt!</p> <p>Der IOTA München Stammtisch wurde ins Leben gerufen, damit die Münchner Community sich regelmäßig treffen kann, um über aktuelle Entwicklungen zu diskutieren. Schaut einfach mal vorbei!</p> ',\n      how_to_find_us: 'Gleich neben U3 Thalkirchen',\n      visibility: 'public',\n      member_pay_fee: false,\n    },\n  ],\n};\n\nexport { mockEvents };\n","import axios from 'axios';\nimport { mockEvents } from './mock-events';\n\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58,\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85,\n      },\n    ];\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    const url =\n      'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=' +\n      query +\n      '&access_token=' +\n      token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n  return [];\n}\n\nasync function getEvents(lat, lon) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url =\n      'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public' +\n      '&access_token=' +\n      token;\n    // lat, lon is optional; if you have a lat and lon, you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    const result = await axios.get(url);\n    return result.data;\n  }\n}\n\nfunction getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if (!code) {\n      window.location.href =\n        'https://secure.meetup.com/oauth2/authorize?client_id=brun83qi3nl9ngtuq9o1abfl2v&response_type=code&redirect_uri=https://xbilyz3.github.io/meetUp/';\n      return null;\n    }\n    return getOrRenewAccessToken('get', code);\n  }\n\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n\n  if (accessToken && Date.now() - lastSavedTime < 3600000) {\n    return accessToken;\n  }\n\n  // If the access_token is expired, we try to renew it by using refresh_token\n  const refreshToken = localStorage.getItem('refresh_token');\n  return getOrRenewAccessToken('renew', refreshToken);\n}\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url =\n      'https://w4jbrclgt5.execute-api.eu-central-1.amazonaws.com/dev/api/token/' +\n      key;\n  } else if (type === 'renew') {\n    // Lambda endpoint to get token by refresh_token\n    url =\n      'https://w4jbrclgt5.execute-api.eu-central-1.amazonaws.com/dev/api/refreshtoken/' +\n      key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n}\n\nexport { getSuggestions, getEvents, getAccessToken };\n","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\n\nclass CitySearch extends Component {\n\tstate = {\n\t\tquery: '',\n\t\tsuggestions: [],\n\t};\n\n\thandleInputChanged = (event) => {\n\t\tconst value = event.target.value;\n\t\tthis.setState({ query: value });\n\t\tgetSuggestions(value).then((suggestions) => this.setState({ suggestions }));\n\t};\n\n\thandleItemClicked = (value, lat, lon) => {\n\t\tthis.setState({ query: value, suggestions: [] });\n\t\tthis.props.updateEvents(lat, lon);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"CitySearch\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"city\"\n\t\t\t\t\tvalue={this.state.query}\n\t\t\t\t\tonChange={this.handleInputChanged}\n\t\t\t\t/>\n\t\t\t\t<ul className=\"suggestions\">\n\t\t\t\t\t{this.state.suggestions.map((item) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={item.name_string}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tthis.handleItemClicked(item.name_string, item.lat, item.lon)\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t{item.name_string}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    ShownEvents: 32,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ ShownEvents: value });\n  };\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <input\n          type=\"number\"\n          className=\"number\"\n          label=\"Number of Events\"\n          value={this.state.ShownEvents}\n          onChange={this.handleInputChanged}\n        />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\n\nclass Event extends Component {\n\tstate = {\n\t\tevent: [],\n\t\tshowDetails: false,\n\t};\n\n\thandleShowDetails = () => {\n\t\tif (this.state.showDetails === false) {\n\t\t\tthis.setState({ showDetails: true });\n\t\t} else {\n\t\t\tthis.setState({ showDetails: false });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst showDetails = this.props.showDetails;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"Event\">\n\t\t\t\t\t<div className=\"eventName\">{this.props.event.name}</div>\n\t\t\t\t\t<div className=\"eventDate\">{this.props.event.local_date}</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"detailsButton\"\n\t\t\t\t\t\tonClick={() => this.handleShowDetails()}>\n\t\t\t\t\t\tshow details\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t{showDetails && (\n\t\t\t\t\t<div className=\"eventDetails\">\n\t\t\t\t\t\t<div className=\"eventDescription\">\n\t\t\t\t\t\t\t{this.props.event.description}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"eventLink\">{this.props.event.link}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"EventList\">\n\t\t\t\t{this.props.events.map((event) => (\n\t\t\t\t\t<li key={event.id}>\n\t\t\t\t\t\t<Event event={event} />\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport EventList from './EventList';\nimport { getEvents } from './api';\n\n//style\nimport './App.css';\n\nclass App extends Component {\n\tstate = {\n\t\tevents: [],\n\t};\n\tupdateEvents = (lat, lon) => {\n\t\tgetEvents(lat, lon).then((events) => this.setState({ events }));\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<CitySearch updateEvents={this.updateEvents} />\n\t\t\t\t<NumberOfEvents />\n\t\t\t\t<EventList events={this.state.events} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}