{"version":3,"sources":["mock-events.js","api.js","CitySearch.js","NumberOfEvents.js","Event.js","EventList.js","App.js","serviceWorker.js","index.js"],"names":["mockEvents","created","duration","id","name","date_in_series_pattern","status","time","local_date","local_time","updated","utc_offset","waitlist_count","yes_rsvp_count","venue","lat","lon","repinned","address_1","city","country","localized_country_name","is_online_event","group","join_mode","urlname","who","localized_location","state","region","timezone","link","description","visibility","member_pay_fee","getSuggestions","query","a","window","location","href","startsWith","name_string","zip","getAccessToken","token","url","axios","get","result","data","getEvents","page","events","accessToken","localStorage","getItem","code","URLSearchParams","search","getOrRenewAccessToken","lastSavedTime","Date","now","type","key","tokenInfo","setItem","access_token","refresh_token","CitySearch","suggestions","handleInputChanged","event","value","target","setState","then","handleItemClicked","props","updateEvents","className","this","onChange","placeholder","map","item","onClick","Component","NumberOfEvents","ShownEvents","label","Event","showDetails","handleShowDetails","EventList","App","defaultCity","response","numberOfEvents","length","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5025410b.chunk.js","sourcesContent":["const mockEvents = {\n  city: {\n    id: 1007700,\n    city: 'München',\n    lat: 48.14,\n    lon: 11.58,\n    state: '',\n    country: 'de',\n    zip: 'meetup3',\n    member_count: 1257,\n  },\n  events: [\n    {\n      created: 1598255462000,\n      duration: 5400000,\n      id: '272775522',\n      name: 'Lunch&Learn: SUCCESSFUL SELLING IN TECHNOLOGY BUSINESS',\n      date_in_series_pattern: false,\n      status: 'upcoming',\n      time: 1600164000000,\n      local_date: '2020-09-15',\n      local_time: '12:00',\n      updated: 1598255462000,\n      utc_offset: 7200000,\n      waitlist_count: 0,\n      yes_rsvp_count: 4,\n      venue: {\n        id: 26052503,\n        name: 'WERK1',\n        lat: 48.12380599975586,\n        lon: 11.608254432678223,\n        repinned: false,\n        address_1: 'Atelierstraße 29',\n        city: 'München',\n        country: 'de',\n        localized_country_name: 'Germany',\n      },\n      is_online_event: false,\n      group: {\n        created: 1458124246000,\n        name: 'WERK1',\n        id: 19716609,\n        join_mode: 'open',\n        lat: 48.13999938964844,\n        lon: 11.579999923706055,\n        urlname: 'WERK1munich',\n        who: 'movers and shakers',\n        localized_location: 'München, Germany',\n        state: '',\n        country: 'de',\n        region: 'en_US',\n        timezone: 'Europe/Berlin',\n      },\n      link: 'https://www.meetup.com/WERK1munich/events/272775522/',\n      description:\n        'Andreas Spechtler, founder and CEO of Silicon Castles, shares practical guidance on the successful selling of your technology into B2B markets.Andreas Spechtler has more than 25 years of experience in the global technology and licensing business, digital entertainment, international marketing, sales and operations all over the world. Andreas worked for American, German and Japanese companies including Real Networks and Sony Corporation and looks back on many years of startup and incubation experience inside and outside of corporations. In his last corporate job, he was an executive at Dolby Laboratories and served as the President of Dolby Laboratories International. End 2016 he left the corporate world and in 2017 he founded Silicon Castles.Silicon Castles is a Technology Business Architect for deep technology businesses with a focus on intellectual property licensing businesses and is based in Salzburg. Silicon Castles focuses on European Diamonds i.e. technology startups with a unique business idea, outstanding intellectual property, and scalable technologies that can solve a global problem. The company Silicon Castles supports startups in various areas; from early-stage investment, set up of a global licensing model, and individual coaching to active participation in global business development and sales via the Silicon Castles global network in Europe, US, and Asia. For more details',\n      visibility: 'public',\n      member_pay_fee: false,\n    },\n  ],\n};\n\nexport { mockEvents };\n","import axios from 'axios';\nimport { mockEvents } from './mock-events';\n\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return [\n      {\n        city: 'Munich',\n        country: 'de',\n        localized_country_name: 'Germany',\n        name_string: 'Munich, Germany',\n        zip: 'meetup3',\n        lat: 48.14,\n        lon: 11.58,\n      },\n      {\n        city: 'Munich',\n        country: 'us',\n        localized_country_name: 'USA',\n        state: 'ND',\n        name_string: 'Munich, North Dakota, USA',\n        zip: '58352',\n        lat: 48.66,\n        lon: -98.85,\n      },\n    ];\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    const url =\n      'https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=' +\n      query +\n      '&access_token=' +\n      token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n\n  return [];\n}\n\nasync function getEvents(lat, lon, page) {\n  if (window.location.href.startsWith('http://localhost')) {\n    return mockEvents.events;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url =\n      'https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public' +\n      '&access_token=' +\n      token;\n    // lat, lon is optional; if you have a lat and lon, you can add them\n    if (lat && lon) {\n      url += '&lat=' + lat + '&lon=' + lon;\n    }\n    if (page) {\n      url += '&page=' + page;\n    }\n    if (lat && lon && page) {\n      url += '&lat=' + lat + '&lon=' + lon + '&page=' + page;\n    }\n    const result = await axios.get(url);\n    const events = result.data.events;\n    return events;\n  }\n}\n\nfunction getAccessToken() {\n  const accessToken = localStorage.getItem('access_token');\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n\n    if (!code) {\n      window.location.href =\n        'https://secure.meetup.com/oauth2/authorize?client_id=brun83qi3nl9ngtuq9o1abfl2v&response_type=code&redirect_uri=https://xbilyz3.github.io/meetUp/';\n      return null;\n    }\n\n    return getOrRenewAccessToken('get', code);\n  }\n\n  const lastSavedTime = localStorage.getItem('last_saved_time');\n\n  if (accessToken && Date.now() - lastSavedTime < 3600000) {\n    return accessToken;\n  }\n\n  const refreshToken = localStorage.getItem('refresh_token');\n\n  return getOrRenewAccessToken('renew', refreshToken);\n}\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === 'get') {\n    // Lambda endpoint to get token by code\n    url =\n      'https://0owgjybb0e.execute-api.eu-central-1.amazonaws.com/dev/api/token/' +\n      key;\n  } else if (type === 'renew') {\n    // Lambda endpoint to get token by refresh_token\n    url =\n      'https://0owgjybb0e.execute-api.eu-central-1.amazonaws.com/dev/api/refreshtoken/' +\n      key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem('access_token', tokenInfo.data.access_token);\n  localStorage.setItem('refresh_token', tokenInfo.data.refresh_token);\n  localStorage.setItem('last_saved_time', Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n}\n\nexport { getSuggestions, getEvents, getAccessToken };\n","import React, { Component } from 'react';\nimport { getSuggestions } from './api';\n\nclass CitySearch extends Component {\n\tstate = {\n\t\tquery: '',\n\t\tsuggestions: [],\n\t};\n\n\thandleInputChanged = (event) => {\n\t\tconst value = event.target.value;\n\t\tthis.setState({ query: value });\n\t\tgetSuggestions(value).then((suggestions) => this.setState({ suggestions }));\n\t};\n\n\thandleItemClicked = (value, lat, lon) => {\n\t\tthis.setState({ query: value, suggestions: [] });\n\t\tthis.props.updateEvents(lat, lon);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"CitySearch\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"city\"\n\t\t\t\t\tvalue={this.state.query}\n\t\t\t\t\tonChange={this.handleInputChanged}\n\t\t\t\t\tplaceholder=\"City\"\n\t\t\t\t/>\n\t\t\t\t<ul className=\"suggestions\">\n\t\t\t\t\t{this.state.suggestions.map((item) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={item.name_string}\n\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\tthis.handleItemClicked(item.name_string, item.lat, item.lon)\n\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t{item.name_string}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CitySearch;\n","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    ShownEvents: 32,\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ ShownEvents: value });\n    this.props.updateEvents(null, null, value);\n  };\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        Show\n        <input\n          type=\"number\"\n          className=\"number\"\n          label=\"Number of Events\"\n          value={this.state.ShownEvents}\n          onChange={this.handleInputChanged}\n        />\n        Events\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","import React, { Component } from 'react';\n\nclass Event extends Component {\n\tstate = {\n\t\tshowDetails: false,\n\t};\n\n\thandleShowDetails = () => {\n\t\tif (this.state.showDetails === false) {\n\t\t\tthis.setState({ showDetails: true });\n\t\t} else {\n\t\t\tthis.setState({ showDetails: false });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst showDetails = this.state.showDetails;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.props.event ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"event\">\n\t\t\t\t\t\t\t<div className=\"eventDate\">\n\t\t\t\t\t\t\t\t{this.props.event.local_time} | {this.props.event.local_date}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"eventName\">{this.props.event.name}</div>\n\t\t\t\t\t\t\t<div className=\"groupName\">\n\t\t\t\t\t\t\t\tGroup: {this.props.event.group.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"going\">\n\t\t\t\t\t\t\t\t{this.props.event.yes_rsvp_count} people are going\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"detailsButton\"\n\t\t\t\t\t\t\t\tonClick={() => this.handleShowDetails()}>\n\t\t\t\t\t\t\t\tshow details\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{showDetails && (\n\t\t\t\t\t\t\t<div className=\"eventDetails\">\n\t\t\t\t\t\t\t\t<div className=\"eventDescription\">\n\t\t\t\t\t\t\t\t\t{this.props.event.description}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"eventLink\">{this.props.event.link}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<></>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ul className=\"EventList\">\n\t\t\t\t{this.props.events.map((event) => (\n\t\t\t\t\t<li key={event.id}>\n\t\t\t\t\t\t<Event event={event} />\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport EventList from './EventList';\nimport { getEvents } from './api';\n\n//style\nimport './App.css';\n\nclass App extends Component {\n\tcomponentDidMount() {\n\t\tgetEvents().then((response) => this.setState({ events: response }));\n\t}\n\n\tstate = {\n\t\tevents: [],\n\t\tpage: null,\n\t\tdefaultCity: '',\n\t\tlat: null,\n\t\tlon: null,\n\t};\n\n\tupdateEvents = (lat, lon, page) => {\n\t\tif (lat && lon) {\n\t\t\tgetEvents(lat, lon, this.state.page).then((response) =>\n\t\t\t\tthis.setState({ events: response, lat, lon })\n\t\t\t);\n\t\t} else if (page) {\n\t\t\tgetEvents(this.state.lat, this.state.lon, page).then((response) =>\n\t\t\t\tthis.setState({ events: response, page })\n\t\t\t);\n\t\t} else {\n\t\t\tgetEvents(\n\t\t\t\tthis.state.lat,\n\t\t\t\tthis.state.lon,\n\t\t\t\tthis.state.page\n\t\t\t).then((response) => this.setState({ events: response }));\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<CitySearch updateEvents={this.updateEvents} />\n\t\t\t\t<NumberOfEvents\n\t\t\t\t\tupdateEvents={this.updateEvents}\n\t\t\t\t\tnumberOfEvents={this.state.events.length}\n\t\t\t\t\tlat={this.state.lat}\n\t\t\t\t\tlon={this.state.lon}\n\t\t\t\t/>\n\t\t\t\t<EventList events={this.state.events} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}